[{"C:\\Users\\Singh\\Desktop\\my-app\\src\\index.js":"1","C:\\Users\\Singh\\Desktop\\my-app\\src\\App.js":"2","C:\\Users\\Singh\\Desktop\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\elements\\Navbar.js":"4","C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\contacts\\Contacts.js":"5","C:\\Users\\Singh\\Desktop\\my-app\\src\\store.js":"6","C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\contacts\\AddContact.js":"7","C:\\Users\\Singh\\Desktop\\my-app\\src\\actions\\contactAction.js":"8","C:\\Users\\Singh\\Desktop\\my-app\\src\\reducers\\index.js":"9","C:\\Users\\Singh\\Desktop\\my-app\\src\\reducers\\contactReducer.js":"10","C:\\Users\\Singh\\Desktop\\my-app\\src\\constant\\types.js":"11","C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\contacts\\EditContact.js":"12"},{"size":481,"mtime":1610083619042,"results":"13","hashOfConfig":"14"},{"size":907,"mtime":1610117634256,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":485,"mtime":1610202917960,"results":"17","hashOfConfig":"14"},{"size":2920,"mtime":1610206019568,"results":"18","hashOfConfig":"14"},{"size":299,"mtime":1610280693813,"results":"19","hashOfConfig":"14"},{"size":2467,"mtime":1610110599028,"results":"20","hashOfConfig":"14"},{"size":800,"mtime":1610205746186,"results":"21","hashOfConfig":"14"},{"size":156,"mtime":1610111066587,"results":"22","hashOfConfig":"14"},{"size":1245,"mtime":1610206210464,"results":"23","hashOfConfig":"14"},{"size":238,"mtime":1610203796430,"results":"24","hashOfConfig":"14"},{"size":2890,"mtime":1610279948969,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ojw5p9",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Singh\\Desktop\\my-app\\src\\index.js",[],["53","54"],"C:\\Users\\Singh\\Desktop\\my-app\\src\\App.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\elements\\Navbar.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\contacts\\Contacts.js",["55"],"import React,{useEffect} from 'react'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport Avatar from 'react-avatar'\r\nimport {getContacts} from '../../actions/contactAction'\r\nimport '../../styles/App.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { deleteContact} from '../../actions/contactAction'\r\n\r\n\r\nfunction Contacts() {\r\n    const dispatch = useDispatch()\r\n    const contacts = useSelector(state => state.contacts.contacts)\r\n\r\n    useEffect(() => {\r\n        dispatch(getContacts())\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <table class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\"></label>\r\n                            </div>\r\n                        </th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Phone</th>\r\n                        <th scope=\"col\">E-mail</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        contacts.map((value, key) => \r\n                            (\r\n                                <tr key={key}>\r\n                                    <th scope=\"row\"><div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" />\r\n                                <label className=\"custom-control-label\"></label>\r\n                            </div></th>\r\n                                    <td><Avatar className=\"mr-3\" size=\"45\" round={true} name={value.name}/>{value.name}</td>\r\n                                    <td>{value.phone}</td>\r\n                                    <td>{value.email}</td>\r\n                                    <td className=\"actions\">\r\n                                        <Link to={'/contacts/edit/'+value.id} >\r\n                                        <span className=\"material-icons mr-2\">\r\n                                            edit\r\n                                        </span>\r\n                                        </Link>\r\n                                       \r\n                                        <span onClick={()=>dispatch(deleteContact(value.id))} className=\"material-icons text-danger\">\r\n                                            remove_circle\r\n                                        </span>\r\n                                        </td>\r\n                                </tr>\r\n                            )\r\n                     )\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts","C:\\Users\\Singh\\Desktop\\my-app\\src\\store.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\contacts\\AddContact.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\actions\\contactAction.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\reducers\\index.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\reducers\\contactReducer.js",["56","57","58"],"import { CREATE_CONTACT,DELETE_CONTACT,GET_CONTACT,GET_CONTACTS, UPDATE_CONTACT } from \"../constant/types\";\r\n\r\nconst initalState = {\r\n    contacts:[\r\n       \r\n    ],\r\n    contact:null,\r\n}\r\n\r\nexport const contactReducer = (state = initalState, action)=>{\r\n    switch (action.type) {\r\n        case GET_CONTACTS:\r\n        return{\r\n            ...state,\r\n            contacts:action.payload\r\n        }\r\n        case CREATE_CONTACT:\r\n            return{...state,\r\n                contacts:[action.payload, ...state.contacts]\r\n            }\r\n        case GET_CONTACT:\r\n            let arr = state.contacts.filter(contact => contact.id == action.payload)\r\n            arr = arr.values();\r\n            for(let val of arr){\r\n                arr= val;\r\n            }\r\n            return {...state,contact:arr,}\r\n        case UPDATE_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts:state.contacts.map(contact=> contact.id == action.payload.id ? action.payload :contact)\r\n            }\r\n        case DELETE_CONTACT:\r\n            return{\r\n                ...state,\r\n                contacts:state.contacts.filter((contact)=>contact.id != action.payload.id )\r\n            }\r\n        default:\r\n        return state\r\n    }\r\n}\r\n","C:\\Users\\Singh\\Desktop\\my-app\\src\\constant\\types.js",[],"C:\\Users\\Singh\\Desktop\\my-app\\src\\components\\contacts\\EditContact.js",["59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":16,"column":8,"nodeType":"67","endLine":16,"endColumn":10,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":22,"column":67,"nodeType":"71","messageId":"72","endLine":22,"endColumn":69},{"ruleId":"69","severity":1,"message":"70","line":31,"column":66,"nodeType":"71","messageId":"72","endLine":31,"endColumn":68},{"ruleId":"69","severity":1,"message":"73","line":36,"column":70,"nodeType":"71","messageId":"72","endLine":36,"endColumn":72},{"ruleId":"74","severity":1,"message":"75","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":15},{"ruleId":"65","severity":1,"message":"78","line":25,"column":8,"nodeType":"67","endLine":25,"endColumn":17,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'shortid' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [dispatch]",{"range":"88","text":"89"},"Update the dependencies array to be: [contact, dispatch, id]",{"range":"90","text":"91"},[514,516],"[dispatch]",[839,848],"[contact, dispatch, id]"]